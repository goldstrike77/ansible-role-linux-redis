---
- name: Add prometheus redis exporter YUM repositories.
  yum_repository:
    name: "{{ redis_exporter_repo_name }}"
    description: "{{ redis_exporter_repo_name }} YUM repository"
    file: "{{ redis_exporter_repo_name }}"
    baseurl: "{{ redis_exporter_repo_url }}"
    gpgcheck: "no"
    sslverify: "no"
    timeout: "60"

- name: Install the prometheus redis exporter.
  yum:
    name: "{{ item }}"
    state: "present"
    validate_certs: "no"
    disable_gpg_check: "yes"
  loop: "{{ redis_exporter_packages }}"
  notify: Restart the Redis exporter service.
  until: soft_update is succeeded
  retries: 5
  delay: 2

- name: Prometheus redis exporter configure file transfer.
  template:
    src: "redis_exporter"
    dest: "/etc/default/"
    backup: "yes"
    owner: "prometheus"
    group: "prometheus"
    mode: "0640"
  notify: Restart the Redis exporter service.
  no_log: true

- name: Redis Sentinel exporter program binary transfer.
  unarchive:
    src: "redis_sentinel_exporter.tar.xz"
    dest: "/usr/local/bin"
    owner: "root"
    group: "root"
    mode: "0755"
  notify: Restart the Redis sentinel exporter service.
  when:
    - redis_cluster_mode == 'sentinel'
    - redis_servers | length > 2

- name: Redis Sentinel exporter configure file transfer.
  template:
    src: "redis_sentinel_exporter.default.j2"
    dest: "/etc/default/redis_sentinel_exporter"
    owner: "prometheus"
    group: "prometheus"
    mode: "0640"
  notify: Restart the Redis sentinel exporter service.
  when:
    - redis_cluster_mode == 'sentinel'
    - redis_servers | length > 2

- name: Redis Sentinel service file transfer.
  copy:
    src: "redis_sentinel_exporter.service"
    dest: "/lib/systemd/system"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: Restart the Redis sentinel exporter service.
  when:
    - redis_cluster_mode == 'sentinel'
    - redis_servers | length > 2

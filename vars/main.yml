---
redis_server_parameters:
  - {
      regexp: "^tls-auth-clients ",
      line: "tls-auth-clients no",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-replication ",
      line: "tls-replication yes",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-cert-file ",
      line: "tls-cert-file {{ redis_cert_path }}/server.crt",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-key-file ",
      line: "tls-key-file {{ redis_cert_path }}/server.key",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-ca-cert-file ",
      line: "tls-ca-cert-file {{ redis_cert_path }}/ca-cert.pem",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - { regexp: "^appendonly ", line: "appendonly yes" }
  - {
      regexp: "^bind ",
      line: "bind {{ ansible_default_ipv4.address }} 127.0.0.1",
    }
  - { regexp: "^daemonize ", line: "daemonize yes" }
  - { regexp: "^dir /", line: "dir {{ redis_path }}/redis" }
  - { regexp: "^maxclients ", line: "maxclients {{ redis_maxclients }}" }
  - { regexp: "^maxmemory ", line: "maxmemory {{ redis_maxmemory }}mb" }
  - {
      regexp: "^maxmemory-policy ",
      line: 'maxmemory-policy {{ redis_maxmemory_policy | default("noeviction") }}',
    }
  - {
      regexp: "^port ",
      line: 'port {% if redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 %}0{% else %}{{ redis_port }}{% endif %}',
    }
  - {
      regexp: "^tls-port ",
      line: "tls-port {{ redis_port }}",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^masterauth ",
      line: 'masterauth {{ redis_requirepass | default("changeme") }}',
      create: "{{ redis_authorization | bool }}",
    }
  - {
      regexp: "^requirepass ",
      line: 'requirepass {{ redis_requirepass | default("changeme") }}',
      create: "{{ redis_authorization | bool }}",
    }
  - { regexp: "^supervised ", line: "supervised systemd" }
  - { regexp: "^syslog-enabled ", line: "syslog-enabled yes" }
  - { regexp: "^tcp-backlog ", line: "tcp-backlog {{ redis_tcp_backlog }}" }
  - {
      regexp: "^tcp-keepalive ",
      line: "tcp-keepalive {{ redis_tcp_keepalive }}",
    }
  - { regexp: "^timeout ", line: "timeout {{ redis_timeout }}" }
  - { regexp: "^protected-mode ", line: "protected-mode no" }
  - {
      regexp: "^cluster-enabled ",
      line: "cluster-enabled yes",
      create: '{{ redis_cluster_mode == "cluster" }}',
    }
  - {
      regexp: "^cluster-announce-bus-port ",
      line: 'cluster-announce-bus-port {{ redis_cluster_port | default("16379") }}',
      create: '{{ redis_cluster_mode == "cluster" }}',
    }

redis_sentinel_parameters:
  - {
      regexp: "^tls-auth-clients ",
      line: "tls-auth-clients no",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-replication ",
      line: "tls-replication yes",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-cert-file ",
      line: "tls-cert-file {{ redis_cert_path }}/server.crt",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-key-file ",
      line: "tls-key-file {{ redis_cert_path }}/server.key",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^tls-ca-cert-file ",
      line: "tls-ca-cert-file {{ redis_cert_path }}/ca-cert.pem",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^port ",
      line: 'port {% if redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 %}0{% else %}{{ redis_sentinel_port }}{% endif %}',
    }
  - {
      regexp: "^tls-port ",
      line: "tls-port {{ redis_sentinel_port }}",
      create: '{{ redis_authorization | bool and redis_ssl | bool and redis_version.split(".")[0] | int > 5 }}',
    }
  - {
      regexp: "^bind ",
      line: "bind {{ ansible_default_ipv4.address }} 127.0.0.1",
    }
  - { regexp: "^protected-mode ", line: "protected-mode no" }
  - {
      regexp: "^requirepass ",
      line: 'requirepass {{ redis_sentinel_requirepass | default("changeme") }}',
      create: "{{ redis_sentinel_authorization | bool }}",
    }
  - { regexp: "^daemonize ", line: "daemonize yes" }
  - { regexp: "^dir /", line: "dir {{ redis_path }}/redis" }
  - { regexp: "^syslog-enabled ", line: "syslog-enabled yes" }
  - {
      regexp: "^sentinel down-after-milliseconds ",
      line: "sentinel down-after-milliseconds {{ redis_cluster_name }} 5000",
    }
  - {
      regexp: "^sentinel parallel-syncs ",
      line: "sentinel parallel-syncs {{ redis_cluster_name }} 1",
    }
  - {
      regexp: "^sentinel failover-timeout ",
      line: "sentinel failover-timeout {{ redis_cluster_name }} 10000",
    }
  - {
      regexp: "^sentinel auth-pass ",
      line: 'sentinel auth-pass {{ redis_cluster_name | default("changeme") }} {{ redis_requirepass }}',
      create: "{{ redis_authorization | bool }}",
    }

redis_kernel_parameters:
  - { variable: "vm.overcommit_memory", value: "1" }
  - { variable: "net.core.somaxconn", value: "65535" }

redis_cert_path: "/etc/redis/ssl"

redis_pypi_url: "pypi.tuna.tsinghua.edu.cn"

redis_python_dependent_packages:
  - "pip==20.3.4"
  - "cffi==1.14.6"
  - "idna==2.10"
  - "cryptography==2.4.2"
  - "paramiko==2.4.3"
  - "pyopenssl==19.0.0"
